@model My_Pharma_DB.Domain.Medicine

@{
    ViewBag.Title = "EditMedicine";
}

<h2>EditMedicine</h2>


@using (Html.BeginForm("EditMedicine", "Home", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
        <h4>Medicine</h4>
        <hr />
        <br />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @ViewBag.errormessage
        <h3 class="text-success">  @ViewBag.showmessage </h3>  <br /> <br />
        @Html.HiddenFor(model => model.MedicineID)

        <div class="form-group">
            @Html.Label("Medicine Name", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MedicineName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MedicineName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Medicine Category", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @* @Html.DropDownListFor(model => model.MedicineCategoryID, @ViewBag.MedCategoryList, new { htmlAttributes = new { @class = "form-control" } })*@
                @*@Html.DropDownListFor(model => model.MedicineCategoryID, (IEnumerable<SelectListItem>)ViewBag.MedCategoryList, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.DropDownListFor(model => model.MedicineCategoryID, Model.MedCategoryList, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MedicineCategoryID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Medicine Description", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MedicineDescription, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MedicineDescription, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Quantity", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MediQty, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MediQty, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Expiry Date", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MediExpiryDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MediExpiryDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Upload Image", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <img src="@Url.Content(Model.ImagePath)" width="250" height="280" />
                <input type="file" name="ImageFile" />
                @Html.ValidationMessageFor(model => model.ImagePath, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "MedicineList")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
